ПЕРЕМЕННЫЕ
  тип имя - объявление переменной
  тип имя = значение - объявление переменной с инициализацией
  имя = значение - присваивание значения переменной
  тип имя[n] - объявление массива
  тип (*указатель)(аргументы) - указатель на функцию

ТИПЫ ДАННЫХ
  char - символ (1 байт)
  int - целочисленный тип (2 или 4 байта)
  float - дробное число
  double - дробное число с двойной точностью
  массивы - компактная запись указателей

МОДИФИКАТОРЫ
  * - указатель (адрес памяти со значением переменной)
  & - ссылка (второе имя переменной)
  const - неизменяемое значение
  signed - отрицательные и положительные числа
  unsigned - положительные числа (длина увеличивается в 2 раза)
  short int - 2 байта памяти
  long int - 4 байта памяти

ОПЕРАЦИИ НАД ДАННЫМИ
  int, float - + - * / % ++ -- += -= *= /= %=
  логические - == != >= <= > < ! && ||
  побитовые - | & ^ ~ >> <<
  указатели - + - ++ --
  & - взятие адреса значения
  * - взятие значения по адресу
  массив[n] - получение элемента массива с индексом n (аналогично: *(массив+n))

ПРИВЕДЕНИЕ ТИПОВ
  (тип) значение - приведение значения к данному типу

ОПРЕДЕЛЕНИЕ ТИПА
  int isalpha(char c) — не нуль, если c — буква; 0 в противном случае.
  int isupper(char c) — не нуль, если c — буква верхнего регистра; 0 в противном случае.
  int islower(char c) — не нуль, если c — буква нижнего регистра; 0 в противном случае.
  int isdigit(char c) — не нуль, если c — цифра; 0 в противном случае.
  int isalnum(char c) — не нуль, если или isalpha(c), или isdigit(c) истинны; 0 в противном случае.
  int isspace(char c) — не нуль, если c — символ пробела, табуляции, новой строки, возврата каретки, перевода страницы, вертикальной табуляции.

СТРОКИ
  "..." "..." - все расположенные рядом строки конкатенируются на этапе компиляции
  int strlen(const char*) - функция подсчитывает количество символов в строке за исключением \0
  void strcat(char* s, char* t) - добавление t в конец s
  void strncat(char* s, char* t, int n) - добавляет n символов из t в конец s
  int strcmp(char* s, char* t) - >0 если s > t, =0 если s = t, <0 если s < t
  int strncmp(char* s, char* t, int n) - аналог strcmp с учетом первых n символов
  int strcpy(char* s, char* t) - копирует t в s
  int strncpy(char* s, char* t, int n) - копирует n символов из t в s
  char* strchr(char* s, char c) - возвращает указатель на первое вхождение c в s
  char* strrchr(char* s, char c) - возвращает указатель на последнее вхождение c в s
  int sprintf(char* res, char* format, ...) - аналог printf, но записывает результат в res
  int sscanf(char* inStr, char* format, ...) - аналог scanf, но читает из inStr
  char toupper(char с) — возвращает c, приведенную к верхнему регистру.
  char tolower(char с) — возвращает c, приведенную к нижнему регистру.

ЧИСЛА
  double sin(х) — синус х, х в радианах
  double cos(x) — косинус х, х в радианах
  double atan2(y, х) — арктангенс y/х, y и х в радианах
  double ехр(х) — экспоненциальная функция еx
  double log(x) — натуральный (по основанию е) логарифм х (х>0)
  double log10(x) — обычный (по основанию 10) логарифм х (х > 0)
  double pow(x, y) — xy
  double sqrt(х) — корень квадратный х (х > 0)
  int abs(x) — абсолютное значение x
  int rand() - функция возвращает случайное число в диапазоне от 0 до RAND_MAX
  void srand(int) - функция устанавливает "семя" для генератора случайных чисел
