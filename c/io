ПОТОКИ
  EOF - признак конца потока (обычно -1)

ЧТЕНИЕ
  int getchar() - чтение очередного символа из входного потока
  int scanf(char* format, &...) - чтение форматированной строки из входного потока в аргументы (функция возвращает число совпадений или EOF если достигнут конец потока. Аргументы должны быть указателями)

ЗАПИСЬ
  int putchar(int c) - запись очередного символа в выходной поток (возвращает записанный символ или EOF в случае ошибки)
  int printf(char* format, ...) - запись форматированной строки в выходной поток

ФОРМАТИРОВАНИЕ
  %s - строка
  %c - символ
  %i - целое число
  %f - дробное число
  %o - восьмеричное целое
  %x - шестнадцатиричное целое
  %5s - строка в блоке из 5 символов (пробелов)
  %.5s - строка из не более чем 5 символов (блок сужается до размеров строки)
  %.2f - дробное число с 2 знаками после запятой
  %-5s - строка с выравниванием по левому краю (по умолчанию выравнивание производится по правому краю)

ФАЙЛЫ
  int open(char* address, int flag, int perms) - открытие файла с правами flag (O_RDONLY - чтение, O_WRONLY - записи, O_RDWR - чтение и запись) и возврат его дескриптора
  int read(int fd, char* s, int size) - считывает в s size байт из файлового дескриптора fd. Возвращает 0 если файл закончен и -1 в случае ошибки, иначе возвращает число прочитанных байт
  int write(int fd, char* s, int size) - записывает в файловый дескриптор fb size байт из строки s. Возвращает реальное число записанных байт или -1 в случае ошибки
  int creat(char* address, int perms) - создает файл с perms правами доступа и возвращает его дескриптор
  long iseek(int fd, long position, int origin) - установка указателя в дескрипторе fd на position относительно origin (0 - от начала, 1 - от текущей, 2 - от конца). Функция возвращает текущую позицию или -1 в случае ошибки FILE* имя - структура, аналогичная целочисленному дескриптору файла с дополнительными данными
  FILE* fopen(char* address, char* mode) - функция открывает файл. В качестве mode может быть указано: r - чтение, w - перезапись, a - запись в конец, r+ - чтение и запись, w+ - перезапись и чтение, a+ - создание, чтение и запись (если файл бинарный, необходимо так же указать b). Если файл невозможно открыть, возвращается NULL
  int getc(FILE* fp) - чтение очередного символа из файла. Функция возвращает EOF если файл кончился
  int ungetc(int c, FILE* fp) - возвращает символ в поток
  char* fgets(char* res, int maxSize, FILE* fp) - функция считывает строку из файла (сохраняя \n) и возвращает ее одновременно копируя в res (возвращает NULL в случае неудачи)
  int putc(int c, FILE* fp) - запись символа в файл. Функция возвращает записанный символ или EOF в случае ошибки
  int fputs(char* s, FILE* fp) - запись строки в файл. Функция возвращает EOF в случае ошибки
  int feof(FILE* fp) - возвращает ненулевое значение если достигнут конец файла
  int fscanf(FILE* fp, char* format, &...) - аналог scanf работающий с файловыми дескрипторами
  int fprintf(FILE* fp, char* format, &...) - аналог printf работающий с файловыми дескрипторами
  int fclose(FILE* fp) - закрытие файлового дескриптора
  int fseek(FILE* fd, long position, int origin) - установка указателя в дескрипторе fd на position относительно origin (0 - от начала, 1 - от текущей, 2 - от конца). Функция возвращает ненулевое значение в случае ошибки

СТАНДАРТНЫЕ ПОТОКИ
  0 - входной поток
  1 - выходной поток
  2 - выходной поток ошибок
  const FILE* stdin - указатель на входной поток
  const FILE* stdout - указатель на выходной поток
  const FILE* stderr - указатель на выходной поток ошибок
