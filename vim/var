ТИПЫ
  Int (0) 1 - целое число Операторы: + - * / % += -= == != > < >= <=
  Float (5) 1.0 - дробное число Операторы: + - * / % == != > < >= <=
  String (1) "Hello" - строка Операторы: . .= == != ==#(с учетом регистра) ==?(без учета регистра) =~ (удовлетворение regexp) !~ (неудовлетворение regexp) =~? (удовлетворение regexp без учета регистра) !~? (неудовлетворение regexp без учета регистра) =~# (удовлетворение regexp с учетом регистра) !~# (неудовлетворение regexp с учетом регистра)
  Function (2) - указатель на функцию
  Array (3) [1,2,3] - массив Операторы: + +=
  Index (4) {"foo": 1, "bar": 2} - словарь
  Boolean - псевдологический тип, значениями которого выступают 1 и 0 && || ! ?:

ТИПИЗАЦИЯ
  type(имя) - возвращает идентификатор типа переменной
  string(имя) - преобразовывает значение переменной в тип String
  str2nr(имя) - преобразовывает значение переменной в тип Integer или Float

ОБЪЯВЛЕНИЕ
  let имя=значение - объявление переменной
  unlet имя - удаление переменной или элемента массива

ОБЛАСТЬ ВИДИМОСТИ
  g: - Глобальные переменные. Использование g:foo равносильно записи foo
  v: - Переменная является глобальной, но предопределенной самим Vim
  s: - Переменная является локальной для скрипта
  b: - Переменная является локальной для буфера
  w: - Переменная является локальной для окна
  t: - Переменная является локальной для вкладки (tab)
  l: - Переменная является локальной для функции
  a: - Переменная является аргументом функции

СТРОКИ
  имя[от:до] - взятие подстроки. Значения от и до по умолчанию равны 0 и -1 соответственно
  iconv() - преобразование кодировки строки
  strlen() - длина строки в байтах
  strpart() - выделение подстроки

РЕГУЛЯРНЫЕ ВЫРАЖЕНИЯ
  \v (рекомендуется) - супермагический режим. Интерпретация всех возможных управляющих символов как управляющих
  \c - учет регистра
  \C - не учет регистра
  \d - любое число
  match() - поиск подстроки по регулярному выражению
  matchstr() - поиск и возврат подстроки по регулярному выражению
  matchlist() - поиск подстроки с разбиением на группы по регулярному выражению (не более 9 групп)
  substitute() - замена вхождений подстроки (по регулярному выражению) на другую строку

СПИСКИ
  range(от, до, шаг) - возвращает массив из указанного диапазона
  имя[от:до] - взятие среза списка. Значения от и до по умолчанию равны 0 и -1 соответственно
  len() - Возвращает количество элементов в списке
  insert() - Вставить новые элементы в заданную позицию списка
  remove() - Удалить элемент или группу элементов списка Функция возвращает удаленные элементы.
  sort() - Сортировать элементы Есть возможность задавать функцию для сравнения элементов.
  reverse() - Перевернуть элементы списка таким образом, чтобы первый элемент стал последним и наоборот
  get()	- Получить элемент списка по индексу, но если индекс не укладывается в размер списка, то можно задать значение по умолчанию, которое будет возвращено в этом случае
  index() - Осуществляет поиск в списке и возвращает индекс найденного элемента

ОБЪЕКТЫ
  keys(o) - возвращает имя свойств объекта
  values(o)  - возвращает значения свойств объекта
  items(o) - возвращает двумерный массив имен и значений свойств объекта
  has_key(o, key) - проверяет, имеется ли указанное свойство в объекте
  remove(o, key) - удаляет свойство из объекта
  deepcopy(o) - возвращает копию объекта
  function obj.method() dict echo self.prop endfunction - создание метода объекта
